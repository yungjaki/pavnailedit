import { getFirestore } from "firebase-admin/firestore";
import { initializeApp, cert } from "firebase-admin/app";
import sgMail from "@sendgrid/mail";
import { google } from "googleapis";
const serviceAccount = require("../../bookingthing.json");

initializeApp({ credential: cert(serviceAccount) });
const db = getFirestore();
const bookingsCollection = db.collection("bookings");

sgMail.setApiKey(process.env.SENDGRID_API_KEY);

const oAuth2Client = new google.auth.OAuth2(
  process.env.GOOGLE_CLIENT_ID,
  process.env.GOOGLE_CLIENT_SECRET,
  "https://developers.google.com/oauthplayground"
);
oAuth2Client.setCredentials({ refresh_token: process.env.GOOGLE_REFRESH_TOKEN });
const calendar = google.calendar({ version: "v3", auth: oAuth2Client });

export default async function handler(req, res) {
  if (req.method !== "POST")
    return res.status(405).json({ error: `Method ${req.method} Not Allowed` });

  try {
    const { id } = req.body;

    if (!id) return res.status(400).json({ error: "–õ–∏–ø—Å–≤–∞ ID" });

    const docRef = bookingsCollection.doc(id);
    const docSnap = await docRef.get();

    if (!docSnap.exists)
      return res.status(404).json({ error: "–ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" });

    const booking = docSnap.data();

    // –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ –≤ Google Calendar, –∞–∫–æ –∏–º–∞ eventId
    if (booking.eventId) {
      try {
        await calendar.events.delete({
          calendarId: process.env.TECH_CALENDAR_ID,
          eventId: booking.eventId,
        });
      } catch (err) {
        console.warn("–ù–µ—É—Å–ø–µ—à–Ω–æ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä–∞:", err.message);
      }
    }

    // –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –æ—Ç Firestore
    await docRef.delete();

    // –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –ø–æ—Ç–≤—ä—Ä–¥–∏—Ç–µ–ª–µ–Ω –∏–º–µ–π–ª –¥–æ –∫–ª–∏–µ–Ω—Ç–∞
    if (booking.clientEmail) {
      await sgMail.send({
        to: booking.clientEmail,
        from: process.env.SENDGRID_FROM_EMAIL,
        subject: `–û—Ç–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è: ${booking.date} ${booking.time}`,
        html: `<div style="font-family:Roboto,sans-serif;background:#fff0f4;padding:25px;border-radius:20px;">
                <h2 style="color:#ff6ec4;text-align:center;">‚õî –í–∞—à–∏—è—Ç —á–∞—Å –µ –æ—Ç–º–µ–Ω–µ–Ω</h2>
                <p>–ó–¥—Ä–∞–≤–µ–π—Ç–µ, ${booking.name}!</p>
                <p>–í–∞—à–∏—è —á–∞—Å –∑–∞ –¥–∞—Ç–∞ <strong>${booking.date}</strong> –∏ —á–∞—Å <strong>${booking.time}</strong> –±–µ—à–µ –æ—Ç–º–µ–Ω–µ–Ω.</p>
                <p>–ù–∞–¥—è–≤–∞–º–µ —Å–µ —Å–∫–æ—Ä–æ –¥–∞ –í–∏ –≤–∏–¥–∏–º –æ—Ç–Ω–æ–≤–æ! üíÖüèª</p>
              </div>`,
      });
    }

    // –ò–º–µ–π–ª –¥–æ —Ç–µ—Ö–Ω–∏–∫–∞
    await sgMail.send({
      to: process.env.TECH_EMAIL,
      from: process.env.SENDGRID_FROM_EMAIL,
      subject: `–û—Ç–∫–∞–∑–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è: ${booking.name} ‚Äî ${booking.date} ${booking.time}`,
      html: `<div style="font-family:Roboto,sans-serif;background:#fff0f4;padding:25px;border-radius:20px;">
              <h2 style="color:#ff6ec4;">‚õî –ß–∞—Å –æ—Ç–º–µ–Ω–µ–Ω</h2>
              <p><strong>–ò–º–µ:</strong> ${booking.name}</p>
              <p><strong>–î–∞—Ç–∞:</strong> ${booking.date}</p>
              <p><strong>–ß–∞—Å:</strong> ${booking.time}</p>
            </div>`,
    });

    return res.status(200).json({ message: "–ß–∞—Å –µ –æ—Ç–º–µ–Ω–µ–Ω" });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ error: "–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ—Ç–∫–∞–∑–≤–∞–Ω–µ" });
  }
}
